- name: Kibana upgradation(7.x)
  hosts: kibana
  become: true
  environment:
    http_proxy: http://cloudproxy-t.nat.bt.com:8080
    https_proxy: http://cloudproxy-t.nat.bt.com:8080
  
  vars:
    
    kibana_version: 7.17.5
    kibana_destination: /opt
    application: kibana
    kibana_home: /usr/share/kibana
    kibana_config: /etc/kibana
    kibana_home_backup: /opt/kibana_home_backup_7.16.2
    kibana_config_backup: /opt/kibana_config_backup_7.16.2
    


  tasks:
  
    - name: Take backup of kibana home directory
      ansible.builtin.command: cp -rp "{{kibana_home}}"  "{{kibana_home_backup}}"
      
    - name: Take backup of kibana config directory
      ansible.builtin.command: cp -rp "{{kibana_config}}" "{{kibana_config_backup}}"

    - name: Download Kibana RPM package {{ kibana_version }}
      ansible.builtin.get_url:
        url: https://artifacts.elastic.co/downloads/kibana/kibana-{{ kibana_version }}-x86_64.rpm
        dest: /opt
        #checksum: "sha512:https://artifacts.elastic.co/downloads/kibana/kibana-{{ kibana_version }}-x86_64.rpm.sha512"
    
    - name: Stop service {{ application}}
      ansible.builtin.service:
        name: "{{ application }}"
        state: stopped

    - name: upgrade {{ application }}
      ansible.builtin.yum:
        name: /opt/kibana-{{ kibana_version }}-x86_64.rpm
        state: present
        
    - name: Just force systemd to reload
      ansible.builtin.systemd:
        daemon_reload: yes
        
    - name: Enable service {{ application }} and ensure it is not masked
      ansible.builtin.systemd:
        name: "{{ application }}"
        enabled: yes
        masked: no

    - name: Start service {{ application}}, if not started
      ansible.builtin.service:
        name: "{{ application }}"
        state: started

    - name: checking kibana service status
      ansible.builtin.command: systemctl status kibana
      register: result
      until: "'active (running)' in result.stdout"
      retries: 10
      delay: 15

    - name: showing {{ application }} status report
      ansible.builtin.debug:
        var: result.stdout 
        
    - name: Pause for 1 minute
      ansible.builtin.pause:
        minutes: 1

    
